<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class ProductBundleDocumentProductHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id']) || (! empty($this->class->fieldMappings['id']['nullable']) && array_key_exists('_id', $data))) {
            $value = $data['_id'];
            if ($value !== null) {
                $return = $value instanceof \MongoId ? (string) $value : $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['productName']) || (! empty($this->class->fieldMappings['productName']['nullable']) && array_key_exists('productName', $data))) {
            $value = $data['productName'];
            if ($value !== null) {
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['productName']->setValue($document, $return);
            $hydratedData['productName'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['category']) || (! empty($this->class->fieldMappings['category']['nullable']) && array_key_exists('category', $data))) {
            $value = $data['category'];
            if ($value !== null) {
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['category']->setValue($document, $return);
            $hydratedData['category'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['brand']) || (! empty($this->class->fieldMappings['brand']['nullable']) && array_key_exists('brand', $data))) {
            $value = $data['brand'];
            if ($value !== null) {
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['brand']->setValue($document, $return);
            $hydratedData['brand'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['productMaterial']) || (! empty($this->class->fieldMappings['productMaterial']['nullable']) && array_key_exists('productMaterial', $data))) {
            $value = $data['productMaterial'];
            if ($value !== null) {
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['productMaterial']->setValue($document, $return);
            $hydratedData['productMaterial'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['imageUrl']) || (! empty($this->class->fieldMappings['imageUrl']['nullable']) && array_key_exists('imageUrl', $data))) {
            $value = $data['imageUrl'];
            if ($value !== null) {
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['imageUrl']->setValue($document, $return);
            $hydratedData['imageUrl'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['delivery'])) {
            $value = $data['delivery'];
            if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateType::getDateTime($value); }
            $this->class->reflFields['delivery']->setValue($document, clone $return);
            $hydratedData['delivery'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['details']) || (! empty($this->class->fieldMappings['details']['nullable']) && array_key_exists('details', $data))) {
            $value = $data['details'];
            if ($value !== null) {
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['details']->setValue($document, $return);
            $hydratedData['details'] = $return;
        }

        /** @Field(type="float") */
        if (isset($data['oldPrice']) || (! empty($this->class->fieldMappings['oldPrice']['nullable']) && array_key_exists('oldPrice', $data))) {
            $value = $data['oldPrice'];
            if ($value !== null) {
                $return = (float) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['oldPrice']->setValue($document, $return);
            $hydratedData['oldPrice'] = $return;
        }

        /** @Field(type="float") */
        if (isset($data['newPrice']) || (! empty($this->class->fieldMappings['newPrice']['nullable']) && array_key_exists('newPrice', $data))) {
            $value = $data['newPrice'];
            if ($value !== null) {
                $return = (float) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['newPrice']->setValue($document, $return);
            $hydratedData['newPrice'] = $return;
        }
        return $hydratedData;
    }
}